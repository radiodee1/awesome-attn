## Where the samples will be written
save_data: data/
## Where the vocab(s) will be written
src_vocab: data/vocab.src
tgt_vocab: data/vocab.tgt
# Prevent overwriting existing files in the folder
overwrite: False

data:
    corpus_1:
        path_src: data/train.from
        path_tgt: data/train.to


save_model: data/transformer_simple.pt
#save_checkpoint_steps: 10000
valid_steps: 0 #10000
train_steps: 200000

# Batching
queue_size: 10000
bucket_size: 32768
#world_size: 4
#gpu_ranks: [0, 1, 2, 3]
#batch_type: "tokens"
#batch_size: 4096
valid_batch_size: 8
max_generator_batches: 2
accum_count: [4]
accum_steps: [0]

# Optimization
model_dtype: "fp32"
#optim: "adam"
#learning_rate: 2
#warmup_steps: 8000
#decay_method: "noam"
#adam_beta2: 0.998
#max_grad_norm: 0
#label_smoothing: 0.1
#param_init: 0
#param_init_glorot: true
#normalization: "tokens"

# Model
#encoder_type: transformer
#decoder_type: transformer
#position_encoding: true
enc_layers: 6
dec_layers: 6
#heads: 8
#rnn_size: 512
#word_vec_size: 512
#transformer_ff: 2048
dropout_steps: [0]
#dropout: [0.1]
attention_dropout: [0.1]

#####################

# One Gpu
#data: exp/dataset.de-en
#save_model: exp/model.de-en
save_checkpoint_steps: 10000
keep_checkpoint: 10
seed: 3435
#train_steps: 500000
#valid_steps: 10000
warmup_steps: 8000
report_every: 100

decoder_type: transformer
encoder_type: transformer
word_vec_size: 512
rnn_size: 512
layers: 6
transformer_ff: 2048
heads: 8

accum_count: 8
optim: adam
adam_beta1: 0.9
adam_beta2: 0.998
decay_method: noam
learning_rate: 2.0
max_grad_norm: 0.0

batch_size: 4096
batch_type: tokens
normalization: tokens
dropout: 0.1
label_smoothing: 0.1

max_generator_batches: 2

param_init: 0.0
param_init_glorot: 'true'
position_encoding: 'true'

world_size: 1
gpu_ranks:
- 0
